name: Deploy

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout代码
        uses: actions/checkout@v3
      
      - name: 设置Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: 安装后端依赖
        working-directory: ./server
        run: npm ci --production
      
      - name: 构建后端
        working-directory: ./server
        run: npm run build
      
      - name: 安装前端依赖
        working-directory: ./client
        run: npm ci
      
      - name: 构建前端
        working-directory: ./client
        run: npm run build
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
      
      - name: 部署到服务器
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/todo-list
            git pull origin main
            
            # 备份当前版本
            cp -r server/dist server/dist.backup
            cp -r client/dist client/dist.backup
            
            # 后端部署
            cd server
            npm ci --production
            npm run build
            npm run migration:run
            
            # 前端部署
            cd ../client
            npm ci
            npm run build
            
            # 重启服务
            pm2 restart todo-api
            
            # 清理旧备份
            find /var/www/todo-list -name "*.backup" -mtime +7 -delete
            
            echo "部署完成！"
      
      - name: 健康检查
        run: |
          sleep 10
          curl -f ${{ secrets.API_HEALTH_URL }} || exit 1
      
      - name: 发送通知
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: '部署状态: ${{ job.status }}'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

